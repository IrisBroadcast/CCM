@using System.Configuration
@using System.Reflection
@using Roles = CCM.Core.Helpers.Roles
@{
    string env = @ConfigurationManager.AppSettings["Environment"];
    var logoClass = (env == "Test" ? "logo-test" : (env == "Dev" ? "logo-dev" : "logo"));
    string deployVersion = Assembly.GetAssembly(typeof(CCM.Core.Entities.Call)).GetName().Version.ToString(3);
    string deployServer = @ConfigurationManager.AppSettings["Server"];
    string buildDateString = @ConfigurationManager.AppSettings["BuildDate"];
    string codecControlHost = @ConfigurationManager.AppSettings["CodecControlHost"];
    string codecControlUserName = @ConfigurationManager.AppSettings["CodecControlUserName"];
    string codecControlPassword = @ConfigurationManager.AppSettings["CodecControlPassword"];
}
<!DOCTYPE html>
<html ng-app="ccm">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <!-- Android chrome -->
    <meta name="theme-color" content="#337ab7" />
    <!-- Windows Phone -->
    <meta name="msapplication-navbutton-color" content="#337ab7">
    <!-- iOS Safari -->
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">
    <title>CCM</title>
    @Styles.Render("~/Content/css")
    @RenderSection("head", required: false)
</head>

<body @RenderSection("BodyAttributes", false)>

    @RenderSection("bodyTop", false)
    <div class="navbar navbar-inverse navbar-fixed-top">
        <div class="container ccm-top-navbar-container">
            <div class="navbar-header">
                <!-- data-toggle="collapse" data-target=".navbar-collapse"-->
                <button type="button" class="navbar-toggle">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <a href="@Url.Action("Index", "Home")" class="@logoClass"></a>
            </div>
            <div class="navbar-collapse collapse ccm-top-navbar-links">

                <ul class="nav navbar-nav navbar-left ccm-top-navbar-links--ul">
                    <!-- Overview -->
                    <li>@Html.ActionLink(Resources.Overview, "Index", "Home")</li>

                    <!-- Statistics -->
                    <li>@Html.ActionLink(Resources.Statistics, "Index", "Statistics")</li>

                    <!-- Studior -->
                    <li class="dropdown">
                        <a href="#" class="dropdown-toggle" data-toggle="dropdown">@Resources.Studios</a>
                        @Html.Action("Menu", "StudioMonitor", new { area = "" })
                    </li>
                    
                    <li><a href="#" onclick="return popitup('menu.html')">Info</a></li>

                    <!-- Administration -->
                    @if (User.IsInRole(Roles.Admin))
                    {
                        <li class="dropdown">
                            <a href="#" class="dropdown-toggle" data-toggle="dropdown">@Resources.Administration</a>

                            <ul class="dropdown-menu ccm-top-navbar-links--dropdown">
                                <li>@Html.ActionLink(Resources.Accounts, "Index", "SipAccount")</li>
                                <li>@Html.ActionLink(Resources.UserAgents, "Index", "UserAgents")</li>
                                <li>@Html.ActionLink(Resources.Profiles, "Index", "Profile")</li>
                                <li>@Html.ActionLink(Resources.Profile_Groups, "Index", "ProfileGroup")</li>
                                <li>@Html.ActionLink(Resources.Owners, "Index", "Owners")</li>
                                <li class="dropdown-menu--divider"><div> </div></li>
                                <li>@Html.ActionLink(Resources.Codec_Types, "Index", "CodecTypes")</li>
                                <li>@Html.ActionLink(Resources.Locations, "Index", "Location")</li>
                                <li>@Html.ActionLink(Resources.Regions, "Index", "Regions")</li>
                                <li>@Html.ActionLink(Resources.Cities, "Index", "City")</li>
                                <li class="dropdown-menu--divider"><div> </div></li>
                                <li>@Html.ActionLink(@Resources.Studios, "Index", "Studio")</li>
                                <li>@Html.ActionLink(Resources.Codec_Presets, "Index", "Presets")</li>
                                <li class="dropdown-menu--divider"><div> </div></li>
                                <li>@Html.ActionLink(Resources.Filters, "Index", "Filter")</li>
                                <li>@Html.ActionLink(Resources.MetaTypes, "Index", "Meta")</li>
                                <li>@Html.ActionLink(Resources.Settings, "Index", "Settings")</li>
                                <li>@Html.ActionLink(Resources.Users, "Index", "User")</li>
                                <li class="dropdown-menu--divider"><div> </div></li>
                                <li>@Html.ActionLink(@Resources.Logs, "Index", "Log")</li>
                                <li>@Html.ActionLink(@Resources.Debug_Title, "Index", "Debugging")</li>
                            </ul>
                        </li>
                    }

                    @if (User.IsInRole("Remote"))
                    {
                        <li class="dropdown">
                            <a href="#" class="dropdown-toggle" data-toggle="dropdown">@Resources.Administration</a>

                            <ul class="dropdown-menu ccm-top-navbar-links--dropdown">
                                <li>@Html.ActionLink(Resources.UserAgents, "Index", "UserAgents")</li>
                                <li>@Html.ActionLink(Resources.Profiles, "Index", "Profile")</li>
                                <li>@Html.ActionLink(Resources.Profile_Groups, "Index", "ProfileGroup")</li>
                                <li>@Html.ActionLink(Resources.Owners, "Index", "Owners")</li>
                                <li class="dropdown-menu--divider"><div> </div></li>
                                <li>@Html.ActionLink(Resources.Codec_Types, "Index", "CodecTypes")</li>
                                <li>@Html.ActionLink(Resources.Locations, "Index", "Location")</li>
                                <li>@Html.ActionLink(Resources.Regions, "Index", "Regions")</li>
                                <li>@Html.ActionLink(Resources.Cities, "Index", "City")</li>
                                <li class="dropdown-menu--divider"><div> </div></li>
                                <li>@Html.ActionLink(@Resources.Studios, "Index", "Studio")</li>
                            </ul>
                        </li>
                    }
                </ul>

                <ul class="nav navbar-nav navbar-right">
                    <!-- Searchbar -->
                    <li>
                        @RenderSection("search", required: false)
                    </li>

                    <!-- Admin Login/Logout-->
                    <li>
                        @Html.Partial("_LoginPartial")
                    </li>
                </ul>

            </div>
        </div>
    </div>

    <div class="container-fluid body-content">
        @RenderBody()
        <hr />
        <footer class="ccm-layout-footer">
            <p>&copy; 2014 - @DateTime.Now.Year Sveriges Radio. Version <strong>@deployVersion</strong> - <strong>@buildDateString</strong> <strong>@deployServer</strong></p>
        </footer>
    </div>

    @RenderSection("bodyBottom", false)

    @Scripts.Render("~/bundles/ccm")
    @RenderSection("scripts", required: false)

    <script>
    window.codecControlHost = @Html.Raw("'" + codecControlHost + "'");
    window.codecControlUserName = @Html.Raw("'" + codecControlUserName + "'");
    window.codecControlPassword = @Html.Raw("'" + codecControlPassword + "'");

    function popitup(url) {
        var newwindow = window.open('http://dev-ccm.sr.se/menu.html','name','height=850,width=680,left=1000,top=50, scrollbars=yes,titlebar=yes,toolbar=yes,resizable=yes,menubar=yes');
        if (window.focus) {
            newwindow.focus();
        }
        return false;
    }
    </script>
</body>
</html>

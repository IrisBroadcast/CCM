@model CCM.Web.Models.User.UserFormViewModel

@section scripts
{
    <script type="text/javascript">
        function generatePassword() {
            var length = 13;
            var alfabet = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!#%";

            var password = "";
            for (var i = 0; i < length; ++i) {
                password += alfabet.charAt(Math.floor(Math.random() * alfabet.length));
            }

            $('#Password').val(password);
            $('#PasswordConfirm').val(password);
            $('#generatedPassword').val(password);
            $('#generatedWrapper').removeClass('hidden');
        }
    </script>
}

<h2>@ViewBag.Title</h2>
<hr />

@using (Html.BeginForm("Save", "User", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.ValidationSummary(false)

    @Html.AntiForgeryToken()

   <div class="form-group">
        @Html.LabelFor(m => m.UserName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.UserName, new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group" id="firstNameGroup">
        @Html.LabelFor(m => m.FirstName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group" id="lastNameGroup">
        @Html.LabelFor(m => m.LastName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
        </div>
    </div>

    if (Model.Roles != null && Model.Roles.Count > 0)
    {
        <div class="form-group" id="roleGroup">
            @Html.LabelFor(m => m.RoleId, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.RoleId, new SelectList(Model.Roles, "Id", "Name"), new { @class = "form-control" })
            </div>
        </div>
    }
    else
    {
        @Html.HiddenFor(m => m.RoleId)
    }

    <div class="form-group">
        @Html.LabelFor(m => m.Comment, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Comment, new { @class = "form-control" })
        </div>
    </div>
    
    <div id="generatedWrapper" class="form-group hidden">
        <label class="col-md-2 control-label">@Resources.Generated_Password</label>
        <div class="col-md-4">
            <input id="generatedPassword" class="form-control" />
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.Password, new { @class = "form-control--horizontal" })
            <button id="pwGen" type="button" onclick="generatePassword()" class="btn btn-info">@Resources.Generate_Password</button>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.PasswordConfirm, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.PasswordConfirm, new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            @Html.ActionLink(Resources.Cancel, "Index", "User", null, new { @class = "btn btn-default" })
            <button type="submit" class="btn btn-primary">@Resources.Save</button>
        </div>
    </div>

    @Html.HiddenFor(m => m.Id)
}
@using Microsoft.Extensions.Localization
@inject IStringLocalizer<CCM.Web.Properties.Resources> Localizer
@using CCM.Core.Enums
@using CCM.Core.Helpers
@addTagHelper "*, Microsoft.AspNetCore.Mvc.TagHelpers"
@model CCM.Web.Models.UserAgents.UserAgentViewModel

<div class="form-group">
    @Html.LabelFor(m => m.Name, new { @class = "col-md-2 control-label" })
    <div class="col-md-10">
        @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(m => m.Identifier, new { @class = "col-md-2 control-label" })
    <div class="col-md-10">
        @Html.TextBoxFor(m => m.Identifier, new { @class = "form-control" })
    </div>
</div>

<div class="form-group">
    <!--@Html.LabelFor(m => m.MatchType, new { @class = "col-md-2 control-label" })-->
    <label class="col-md-2 control-label">
        @Localizer["Identify_Type"]
    </label>

    <div class="col-md-10">
        <div class="ccm-form-group--radio">
            <label>
                <div class="ccm-form-group-radio--btn">
                    @Html.RadioButtonFor(m => m.MatchType, UserAgentPatternMatchType.Regular_Expression)
                </div>
                <div class="ccm-form-group-radio--text">
                    @UserAgentPatternMatchType.Regular_Expression.DescriptionAsResource()
                    @Html.Encode(" ")
                </div>
            </label>
        </div>
        <div class="ccm-form-group--radio">
            <label>
                <div class="ccm-form-group-radio--btn">
                    @Html.RadioButtonFor(m => m.MatchType, UserAgentPatternMatchType.Contains)
                </div>
                <div class="ccm-form-group-radio--text">
                    @UserAgentPatternMatchType.Contains.DescriptionAsResource()
                    @Html.Encode(" ")
                </div>
            </label>
        </div>
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(m => m.Image, new { @class = "col-md-2 control-label" })
    <div class="col-md-10">
        <div>
            <input type="file" name="file" class="form-control" />
        </div>
        @if (Model != null && !string.IsNullOrWhiteSpace(Model.Image))
        {
            <div class="ccm-form-input--agent-logo">
                <img src="@Url.Content(string.Format("~/uaimages/{0}", Model.Image))" alt="" />
            </div>
        }

        @Html.HiddenFor(m => m.Image)
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(m => m.Profiles, new { @class = "col-md-2 control-label" })
    <div class="col-md-10">
        <div class="dropdown">
            <div class="inlineselection-menu inlineselection-menu--full">
                <ul class="sortable-selection" role="menu">
                    @for (int i = 0; i < Model.Profiles.Count; i++)
                    {
                        <li>
                            <label class="checkbox">
                                @Html.CheckBoxFor(m => m.Profiles[i].Selected)
                                @Model.Profiles[i].Name
                                @Html.HiddenFor(m => m.Profiles[i].Id)
                                @Html.HiddenFor(m => m.Profiles[i].Name)
                                @Html.Hidden(string.Format("Profiles[{0}].SortIndex", i), i, new { @class = "sortIndex" })
                            </label>
                        </li>
                    }
                </ul>
            </div>
        </div>
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(m => m.Category, new { @class = "col-md-2 control-label" })
    <div class="col-md-10">
        @Html.DropDownListFor(m => m.Category, new SelectList(Model.Categories, "Id", "Name"), "", new { @class = "form-control" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(m => m.Comment, new { @class = "col-md-2 control-label" })
    <div class="col-md-10">
        @Html.TextAreaFor(m => m.Comment, new { @class = "form-control" })
    </div>
</div>

<div class="form-group">
    @Localizer["Codec_Control_Settings"]
</div>

<div class="form-group">
    @Html.LabelFor(m => m.Api, new { @class = "col-md-2 control-label" })
    <div class="col-md-10">
        @Html.DropDownListFor(m => m.Api, new SelectList(Model.CodecApis, "Value", "Key"), new { @class = "form-control" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(m => m.UserInterfaceLink, new { @class = "col-md-2 control-label" })
    <div class="col-md-10">
        @Html.TextBoxFor(m => m.UserInterfaceLink, new { @class = "form-control" })
        @Html.DescriptionFor(m => m.UserInterfaceLink)
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(m => m.UserInterfaceIsOpen, new { @class = "col-md-2 control-label" })
    <div class="col-md-10">
        <div class="ccm-form-group--checkbox">
            <div class="ccm-form-group-checkbox--btn">
                @Html.CheckBoxFor(m => m.UserInterfaceIsOpen)
            </div>
            <div class="ccm-form-group-checkbox--text">
                @Html.DescriptionFor(m => m.UserInterfaceIsOpen)
            </div>
        </div>
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(m => m.Height, new { @class = "col-md-2 control-label" })
    <div class="col-md-10">
        @Html.TextBoxFor(m => m.Height, new { @class = "form-control" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(m => m.Width, new { @class = "col-md-2 control-label" })
    <div class="col-md-10">
        @Html.TextBoxFor(m => m.Width, new { @class = "form-control" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(m => m.UseScrollbars, new { @class = "col-md-2 control-label" })
    <div class="col-md-10">
        <div class="ccm-form-group--checkbox">
            <div class="ccm-form-group-checkbox--btn">
                @Html.CheckBoxFor(m => m.UseScrollbars)
            </div>
        </div>
    </div>
</div>

@Html.HiddenFor(m => m.Id)

<div class="form-group">
    <div class="col-md-offset-2 col-md-10">
        @Html.ActionLink(@Localizer["Cancel"].Value, "Index", "UserAgents", null, new { @class = "btn btn-default" })
        <button type="submit" class="btn btn-primary">@Localizer["Save"]</button>
    </div>
</div>